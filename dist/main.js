/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
eval("console.log(\"Webpack is working!\")\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let startButton = document.getElementById(\"start-button\");\n  let otherCar1 = document.getElementById(\"other-car-1\")\n  let otherCar2 = document.getElementById(\"other-car-2\")\n  let otherCar3 = document.getElementById(\"other-car-3\")\n  let otherCar4 = document.getElementById(\"other-car-4\")\n  let otherCar5 = document.getElementById(\"other-car-5\")\n\n  let car = document.getElementById(\"car\")\n\n  // otherCar.addEventListener('animationiteration', () => {\n  //   let random = Math.floor(Math.random() * 5)\n  //   let left = random * 10;\n  //   otherCar.style.left = 181 + left + \"px\"\n  // })\n\n  function jump() {\n    if (car.classList != \"animate\") {\n      car.classList.add(\"animate\");\n    }\n    setTimeout(function(){\n      car.classList.remove(\"animate\")\n    }, 500)\n  }\n\n  function moveLeft() {\n    let left = parseInt(window.getComputedStyle(car).getPropertyValue(\"left\"));\n    left -= 90;\n    if( left >= 100){\n      car.style.left = left + \"px\";\n    }\n  }\n\n  function moveRight() {\n    let left = parseInt(window.getComputedStyle(car).getPropertyValue(\"left\"));\n    left += 90;\n    if( left < 500){\n      car.style.left = left + \"px\";\n    }\n  }\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); \n  }\n\n  startButton.addEventListener(\"click\", () => { \n    document.getElementById(\"intro-container\").classList.add(\"hidden\");\n    document.addEventListener(\"keydown\", e => {\n      if(e.key == \"Right\" || e.key == \"ArrowRight\") {\n        debugger\n        if(car.classList.contains(\"lane3\")) {\n          car.classList.remove(\"lane3\")\n          car.classList.add(\"lane4\")\n          moveRight();\n        } else if (car.classList.contains(\"lane4\")) {\n          car.classList.remove(\"lane4\")\n          car.classList.add(\"lane5\")\n          moveRight();\n        } else if (car.classList.contains(\"lane1\")) {\n          car.classList.remove(\"lane1\")\n          car.classList.add(\"lane2\")\n          moveRight();\n        } else if (car.classList.contains(\"lane2\")) {\n          car.classList.remove(\"lane2\")\n          car.classList.add(\"lane3\")\n          moveRight();\n        }\n      }\n      else if(e.key == \"Left\" || e.key == \"ArrowLeft\") {\n        if(car.classList.contains(\"lane3\")) {\n          car.classList.remove(\"lane3\")\n          car.classList.add(\"lane2\")\n          moveLeft();\n        } else if (car.classList.contains(\"lane4\")) {\n          car.classList.remove(\"lane4\")\n          car.classList.add(\"lane3\")\n          moveLeft();\n        } else if (car.classList.contains(\"lane2\")) {\n          car.classList.remove(\"lane2\")\n          car.classList.add(\"lane1\")\n          moveLeft();\n        } else if (car.classList.contains(\"lane5\")) {\n          car.classList.remove(\"lane5\")\n          car.classList.add(\"lane4\")\n          moveLeft();\n        }\n      } else if (e.keyCode == 32) {\n        jump();\n      }\n    });\n\n    otherCar1.style.animation = `slide1 ${getRandomInt(1, 5)}s infinite linear`\n    otherCar2.style.animation = `slide2 ${getRandomInt(1, 5)}s infinite linear`\n    otherCar3.style.animation = `slide3 ${getRandomInt(1, 5)}s infinite linear`\n    otherCar4.style.animation = `slide4 ${getRandomInt(1, 5)}s infinite linear`\n    otherCar5.style.animation = `slide5 ${getRandomInt(1, 5)}s infinite linear`\n\n    otherCar1.addEventListener('animationiteration', () => {\n      otherCar1.style.animation = `slide1 ${getRandomInt(1, 5)}s infinite linear`;\n    })\n\n    otherCar2.addEventListener('animationiteration', () => {\n      otherCar2.style.animation = `slide2 ${getRandomInt(1, 5)}s infinite linear`;\n    })\n\n    otherCar3.addEventListener('animationiteration', () => {\n      otherCar3.style.animation = `slide3 ${getRandomInt(1, 5)}s infinite linear`;\n    })\n\n    otherCar4.addEventListener('animationiteration', () => {\n      otherCar4.style.animation = `slide4 ${getRandomInt(1, 5)}s infinite linear`;\n    })\n\n    otherCar5.addEventListener('animationiteration', () => {\n      otherCar5.style.animation = `slide5 ${getRandomInt(1, 5)}s infinite linear`;\n    })\n\n    setInterval(() => {\n      let carLeft = parseInt(window.getComputedStyle(car).getPropertyValue(\"left\"))\n      let carBottom = parseInt(window.getComputedStyle(car).getPropertyValue(\"bottom\"))\n\n      let car1Left = parseInt(window.getComputedStyle(otherCar1).getPropertyValue(\"left\"))\n      let car2Left = parseInt(window.getComputedStyle(otherCar2).getPropertyValue(\"left\"))\n      let car3Left = parseInt(window.getComputedStyle(otherCar3).getPropertyValue(\"left\"))\n      let car4Left = parseInt(window.getComputedStyle(otherCar4).getPropertyValue(\"left\"))\n      let car5Left = parseInt(window.getComputedStyle(otherCar5).getPropertyValue(\"left\"))\n\n      let car1Bottom = parseInt(window.getComputedStyle(otherCar1).getPropertyValue(\"bottom\"))\n      let car2Bottom = parseInt(window.getComputedStyle(otherCar2).getPropertyValue(\"bottom\"))\n      let car3Bottom = parseInt(window.getComputedStyle(otherCar3).getPropertyValue(\"bottom\"))\n      let car4Bottom = parseInt(window.getComputedStyle(otherCar4).getPropertyValue(\"bottom\"))\n      let car5Bottom = parseInt(window.getComputedStyle(otherCar5).getPropertyValue(\"bottom\"))\n\n      if (\n        (carLeft == car1Left && carBottom == car1Bottom) || \n        (carLeft == car2Left && carBottom == car2Bottom) ||\n        (carLeft == car3Left && carBottom == car3Bottom) ||\n        (carLeft == car4Left && carBottom == car4Bottom) ||\n        (carLeft == car5Left && carBottom == car5Bottom)) {\n          alert(\"You crashed! Game over.\");\n          car.style.animation = \"none\";\n          otherCar1.style.animation = \"none\";\n          otherCar2.style.animation = \"none\";\n          otherCar3.style.animation = \"none\";\n          otherCar4.style.animation = \"none\";\n          otherCar5.style.animation = \"none\";\n      }\n    }, 1);\n  })\n})\n\n//# sourceURL=webpack://synthwave-taxi/./src/index.js?");
/******/ })()
;